generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  username String  @unique
  password String
  verified Boolean @default(false)
  role     Role    @default(siswa)
  stan     Stan?
  siswa    Siswa?
}

enum Role {
  adminStan
  siswa
}

model Siswa {
  id        String      @id @default(uuid())
  namaSiswa String
  alamat    String
  telp      String
  foto      String
  userId    String      @unique
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  transaksi Transaksi[]
}

model Stan {
  id          String      @id @default(uuid())
  namaStan    String
  namaPemilik String
  telp        String
  userId      String      @unique
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  menu        Menu[]
  transaksi   Transaksi[]
  diskon      Diskon[]
}

model Menu {
  id              String            @id @default(uuid())
  namaMakanan     String
  foto            String
  deskripsi       String
  harga           Int
  jenis           Jenis             @default(makanan)
  stanId          String
  stan            Stan              @relation(fields: [stanId], references: [id], onDelete: Cascade)
  menuDiskon      MenuDiskon[]
  detailTransaksi DetailTransaksi[]
}

enum Jenis {
  makanan
  minuman
}

model MenuDiskon {
  id       String @id @default(uuid())
  menuId   String
  menu     Menu   @relation(fields: [menuId], references: [id], onDelete: Cascade)
  diskonId String
  diskon   Diskon @relation(fields: [diskonId], references: [id], onDelete: Cascade)
}

model Diskon {
  id               String       @id @default(uuid())
  namaDiskon       String
  presentaseDiskon Int
  stanId           String
  stan             Stan         @relation(fields: [stanId], references: [id], onDelete: Cascade)
  tanggalAwal      DateTime
  tanggalAkhir     DateTime
  menuDiskon       MenuDiskon[]
}

model Transaksi {
  id              String            @id @default(uuid())
  tanggal         DateTime          @default(now())
  status          Status            @default(belumDikonfirmasi)
  stanId          String?
  stan            Stan?             @relation(fields: [stanId], references: [id], onDelete: SetNull)
  siswaId         String?
  siswa           Siswa?            @relation(fields: [siswaId], references: [id], onDelete: SetNull)
  detailTransaksi DetailTransaksi[]
}

enum Status {
  belumDikonfirmasi
  dimasak
  diantar
  sampai
}

model DetailTransaksi {
  id          String    @id @default(uuid())
  qty         Int
  hargaBeli   Int
  transaksiId String
  transaksi   Transaksi @relation(fields: [transaksiId], references: [id], onDelete: Cascade)
  menuId      String?
  menu        Menu?     @relation(fields: [menuId], references: [id], onDelete: SetNull)
}
